diff --git a/v20.1/transactions.md b/v20.1/transactions.md
index 0c827d42..bd10f91c 100644
--- a/v20.1/transactions.md
+++ b/v20.1/transactions.md
@@ -172,6 +172,15 @@ For more details about transaction contention and best practices for avoiding co
 
  CockroachDB supports the nesting of transactions using [savepoints](savepoint.html).  These nested transactions are also known as sub-transactions.
 
+{{site.data.alerts.callout_info}}
+Even though nested transactions are part of the SQL standard, supported by Postgres, and often requested by users, we do not recommend their use in new applications.  They can easily lead to tightly coupled designs, and transactions spanning multiple components.  This can lead to the following problems in modern, distributed applications:
+
+- Poor horizontal scalability due to increased coupling
+- Decreased performance
+- Increased chance of encountering transaction conflicts
+- Higher chance of correctness errors due to multi-level rollbacks vs. possible side effects performed by application components holding the transaction (external API calls, etc.)
+{{site.data.alerts.end}}
+
 Just as [`COMMIT`](commit-transaction.html) and [`ROLLBACK`](rollback-transaction.html) are used to commit and discard entire transactions, respectively, [`RELEASE SAVEPOINT`](release-savepoint.html) and [`ROLLBACK TO SAVEPOINT`](rollback-transaction.html#rollback-a-nested-transaction) are used to commit and discard nested transactions.  This relationship is shown in the table below:
 
 | Statement                                                                          | Effect                                                |
